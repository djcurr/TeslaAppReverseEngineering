package l50;

import androidx.recyclerview.widget.l;
import java.lang.reflect.Array;
import org.bouncycastle.crypto.DataLengthException;
import org.bouncycastle.crypto.OutputLengthException;
import org.spongycastle.crypto.signers.PSSSigner;
import org.spongycastle.crypto.tls.CipherSuite;
import org.spongycastle.math.ec.Tnaf;

/* loaded from: classes5.dex */
public class a implements org.bouncycastle.crypto.e {

    /* renamed from: e  reason: collision with root package name */
    private static final byte[] f36657e = {99, 124, 119, 123, -14, 107, 111, -59, 48, 1, 103, 43, -2, -41, -85, 118, -54, -126, -55, 125, -6, 89, 71, -16, -83, -44, -94, -81, -100, -92, 114, -64, -73, -3, -109, 38, 54, 63, -9, -52, 52, -91, -27, -15, 113, -40, 49, 21, 4, -57, 35, -61, 24, -106, 5, -102, 7, 18, Byte.MIN_VALUE, -30, -21, 39, -78, 117, 9, -125, 44, 26, 27, 110, 90, -96, 82, 59, -42, -77, 41, -29, 47, -124, 83, -47, 0, -19, 32, -4, -79, 91, 106, -53, -66, 57, 74, 76, 88, -49, -48, -17, -86, -5, 67, 77, 51, -123, 69, -7, 2, Byte.MAX_VALUE, 80, 60, -97, -88, 81, -93, 64, -113, -110, -99, 56, -11, PSSSigner.TRAILER_IMPLICIT, -74, -38, 33, Tnaf.POW_2_WIDTH, -1, -13, -46, -51, 12, 19, -20, 95, -105, 68, 23, -60, -89, 126, 61, 100, 93, 25, 115, 96, -127, 79, -36, 34, 42, -112, -120, 70, -18, -72, 20, -34, 94, 11, -37, -32, 50, 58, 10, 73, 6, 36, 92, -62, -45, -84, 98, -111, -107, -28, 121, -25, -56, 55, 109, -115, -43, 78, -87, 108, 86, -12, -22, 101, 122, -82, 8, -70, 120, 37, 46, 28, -90, -76, -58, -24, -35, 116, 31, 75, -67, -117, -118, 112, 62, -75, 102, 72, 3, -10, 14, 97, 53, 87, -71, -122, -63, 29, -98, -31, -8, -104, 17, 105, -39, -114, -108, -101, 30, -121, -23, -50, 85, 40, -33, -116, -95, -119, 13, -65, -26, 66, 104, 65, -103, 45, 15, -80, 84, -69, 22};

    /* renamed from: f  reason: collision with root package name */
    private static final byte[] f36658f = {82, 9, 106, -43, 48, 54, -91, 56, -65, 64, -93, -98, -127, -13, -41, -5, 124, -29, 57, -126, -101, 47, -1, -121, 52, -114, 67, 68, -60, -34, -23, -53, 84, 123, -108, 50, -90, -62, 35, 61, -18, 76, -107, 11, 66, -6, -61, 78, 8, 46, -95, 102, 40, -39, 36, -78, 118, 91, -94, 73, 109, -117, -47, 37, 114, -8, -10, 100, -122, 104, -104, 22, -44, -92, 92, -52, 93, 101, -74, -110, 108, 112, 72, 80, -3, -19, -71, -38, 94, 21, 70, 87, -89, -115, -99, -124, -112, -40, -85, 0, -116, PSSSigner.TRAILER_IMPLICIT, -45, 10, -9, -28, 88, 5, -72, -77, 69, 6, -48, 44, 30, -113, -54, 63, 15, 2, -63, -81, -67, 3, 1, 19, -118, 107, 58, -111, 17, 65, 79, 103, -36, -22, -105, -14, -49, -50, -16, -76, -26, 115, -106, -84, 116, 34, -25, -83, 53, -123, -30, -7, 55, -24, 28, 117, -33, 110, 71, -15, 26, 113, 29, 41, -59, -119, 111, -73, 98, 14, -86, 24, -66, 27, -4, 86, 62, 75, -58, -46, 121, 32, -102, -37, -64, -2, 120, -51, 90, -12, 31, -35, -88, 51, -120, 7, -57, 49, -79, 18, Tnaf.POW_2_WIDTH, 89, 39, Byte.MIN_VALUE, -20, 95, 96, 81, Byte.MAX_VALUE, -87, 25, -75, 74, 13, 45, -27, 122, -97, -109, -55, -100, -17, -96, -32, 59, 77, -82, 42, -11, -80, -56, -21, -69, 60, -125, 83, -103, 97, 23, 43, 4, 126, -70, 119, -42, 38, -31, 105, 20, 99, 85, 33, 12, 125};

    /* renamed from: g  reason: collision with root package name */
    private static final int[] f36659g = {1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, CipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, CipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA384, 125, l.f.DEFAULT_SWIPE_ANIMATION_DURATION, 239, 197, 145};

    /* renamed from: h  reason: collision with root package name */
    private static final int[] f36660h = {-1520213050, -2072216328, -1720223762, -1921287178, 234025727, -1117033514, -1318096930, 1422247313, 1345335392, 50397442, -1452841010, 2099981142, 436141799, 1658312629, -424957107, -1703512340, 1170918031, -1652391393, 1086966153, -2021818886, 368769775, -346465870, -918075506, 200339707, -324162239, 1742001331, -39673249, -357585083, -1080255453, -140204973, -1770884380, 1539358875, -1028147339, 486407649, -1366060227, 1780885068, 1513502316, 1094664062, 49805301, 1338821763, 1546925160, -190470831, 887481809, 150073849, -1821281822, 1943591083, 1395732834, 1058346282, 201589768, 1388824469, 1696801606, 1589887901, 672667696, -1583966665, 251987210, -1248159185, 151455502, 907153956, -1686077413, 1038279391, 652995533, 1764173646, -843926913, -1619692054, 453576978, -1635548387, 1949051992, 773462580, 756751158, -1301385508, -296068428, -73359269, -162377052, 1295727478, 1641469623, -827083907, 2066295122, 1055122397, 1898917726, -1752923117, -179088474, 1758581177, 0, 753790401, 1612718144, 536673507, -927878791, -312779850, -1100322092, 1187761037, -641810841, 1262041458, -565556588, -733197160, -396863312, 1255133061, 1808847035, 720367557, -441800113, 385612781, -985447546, -682799718, 1429418854, -1803188975, -817543798, 284817897, 100794884, -2122350594, -263171936, 1144798328, -1163944155, -475486133, -212774494, -22830243, -1069531008, -1970303227, -1382903233, -1130521311, 1211644016, 83228145, -541279133, -1044990345, 1977277103, 1663115586, 806359072, 452984805, 250868733, 1842533055, 1288555905, 336333848, 890442534, 804056259, -513843266, -1567123659, -867941240, 957814574, 1472513171, -223893675, -2105639172, 1195195770, -1402706744, -413311558, 723065138, -1787595802, -1604296512, -1736343271, -783331426, 2145180835, 1713513028, 2116692564, -1416589253, -2088204277, -901364084, 703524551, -742868885, 1007948840, 2044649127, -497131844, 487262998, 1994120109, 1004593371, 1446130276, 1312438900, 503974420, -615954030, 168166924, 1814307912, -463709000, 1573044895, 1859376061, -273896381, -1503501628, -1466855111, -1533700815, 937747667, -1954973198, 854058965, 1137232011, 1496790894, -1217565222, -1936880383, 1691735473, -766620004, -525751991, -1267962664, -95005012, 133494003, 636152527, -1352309302, -1904575756, -374428089, 403179536, -709182865, -2005370640, 1864705354, 1915629148, 605822008, -240736681, -944458637, 1371981463, 602466507, 2094914977, -1670089496, 555687742, -582268010, -591544991, -2037675251, -2054518257, -1871679264, 1111375484, -994724495, -1436129588, -666351472, 84083462, 32962295, 302911004, -1553899070, 1597322602, -111716434, -793134743, -1853454825, 1489093017, 656219450, -1180787161, 954327513, 335083755, -1281845205, 856756514, -1150719534, 1893325225, -1987146233, -1483434957, -1231316179, 572399164, -1836611819, 552200649, 1238290055, -11184726, 2015897680, 2061492133, -1886614525, -123625127, -2138470135, 386731290, -624967835, 837215959, -968736124, -1201116976, -1019133566, -1332111063, 1999449434, 286199582, -877612933, -61582168, -692339859, 974525996};

    /* renamed from: i  reason: collision with root package name */
    private static final int[] f36661i = {1353184337, 1399144830, -1012656358, -1772214470, -882136261, -247096033, -1420232020, -1828461749, 1442459680, -160598355, -1854485368, 625738485, -52959921, -674551099, -2143013594, -1885117771, 1230680542, 1729870373, -1743852987, -507445667, 41234371, 317738113, -1550367091, -956705941, -413167869, -1784901099, -344298049, -631680363, 763608788, -752782248, 694804553, 1154009486, 1787413109, 2021232372, 1799248025, -579749593, -1236278850, 397248752, 1722556617, -1271214467, 407560035, -2110711067, 1613975959, 1165972322, -529046351, -2068943941, 480281086, -1809118983, 1483229296, 436028815, -2022908268, -1208452270, 601060267, -503166094, 1468997603, 715871590, 120122290, 63092015, -1703164538, -1526188077, -226023376, -1297760477, -1167457534, 1552029421, 723308426, -1833666137, -252573709, -1578997426, -839591323, -708967162, 526529745, -1963022652, -1655493068, -1604979806, 853641733, 1978398372, 971801355, -1427152832, 111112542, 1360031421, -108388034, 1023860118, -1375387939, 1186850381, -1249028975, 90031217, 1876166148, -15380384, 620468249, -1746289194, -868007799, 2006899047, -1119688528, -2004121337, 945494503, -605108103, 1191869601, -384875908, -920746760, 0, -2088337399, 1223502642, -1401941730, 1316117100, -67170563, 1446544655, 517320253, 658058550, 1691946762, 564550760, -783000677, 976107044, -1318647284, 266819475, -761860428, -1634624741, 1338359936, -1574904735, 1766553434, 370807324, 179999714, -450191168, 1138762300, 488053522, 185403662, -1379431438, -1180125651, -928440812, -2061897385, 1275557295, -1143105042, -44007517, -1624899081, -1124765092, -985962940, 880737115, 1982415755, -590994485, 1761406390, 1676797112, -891538985, 277177154, 1076008723, 538035844, 2099530373, -130171950, 288553390, 1839278535, 1261411869, -214912292, -330136051, -790380169, 1813426987, -1715900247, -95906799, 577038663, -997393240, 440397984, -668172970, -275762398, -951170681, -1043253031, -22885748, 906744984, -813566554, 685669029, 646887386, -1530942145, -459458004, 227702864, -1681105046, 1648787028, -1038905866, -390539120, 1593260334, -173030526, -1098883681, 2090061929, -1456614033, -1290656305, 999926984, -1484974064, 1852021992, 2075868123, 158869197, -199730834, 28809964, -1466282109, 1701746150, 2129067946, 147831841, -420997649, -644094022, -835293366, -737566742, -696471511, -1347247055, 824393514, 815048134, -1067015627, 935087732, -1496677636, -1328508704, 366520115, 1251476721, -136647615, 240176511, 804688151, -1915335306, 1303441219, 1414376140, -553347356, -474623586, 461924940, -1205916479, 2136040774, 82468509, 1563790337, 1937016826, 776014843, 1511876531, 1389550482, 861278441, 323475053, -1939744870, 2047648055, -1911228327, -1992551445, -299390514, 902390199, -303751967, 1018251130, 1507840668, 1064563285, 2043548696, -1086863501, -355600557, 1537932639, 342834655, -2032450440, -2114736182, 1053059257, 741614648, 1598071746, 1925389590, 203809468, -1958134744, 1100287487, 1895934009, -558691320, -1662733096, -1866377628, 1636092795, 1890988757, 1952214088, 1113045200};

    /* renamed from: a  reason: collision with root package name */
    private int f36662a;

    /* renamed from: b  reason: collision with root package name */
    private int[][] f36663b = null;

    /* renamed from: c  reason: collision with root package name */
    private boolean f36664c;

    /* renamed from: d  reason: collision with root package name */
    private byte[] f36665d;

    private static int a(int i11) {
        return (((i11 & (-2139062144)) >>> 7) * 27) ^ ((2139062143 & i11) << 1);
    }

    private static int b(int i11) {
        int i12 = i11 & (-1061109568);
        int i13 = i12 ^ (i12 >>> 1);
        return (i13 >>> 5) ^ (((1061109567 & i11) << 2) ^ (i13 >>> 2));
    }

    private void c(byte[] bArr, int i11, byte[] bArr2, int i12, int[][] iArr) {
        int l11 = r70.i.l(bArr, i11 + 0);
        int l12 = r70.i.l(bArr, i11 + 4);
        int l13 = r70.i.l(bArr, i11 + 8);
        int l14 = r70.i.l(bArr, i11 + 12);
        int i13 = this.f36662a;
        char c11 = 0;
        int i14 = l11 ^ iArr[i13][0];
        int i15 = 1;
        int i16 = l12 ^ iArr[i13][1];
        int i17 = l13 ^ iArr[i13][2];
        int i18 = i13 - 1;
        int i19 = l14 ^ iArr[i13][3];
        while (i18 > i15) {
            int[] iArr2 = f36661i;
            int g11 = (((g(iArr2[(i19 >> 8) & 255], 24) ^ iArr2[i14 & 255]) ^ g(iArr2[(i17 >> 16) & 255], 16)) ^ g(iArr2[(i16 >> 24) & 255], 8)) ^ iArr[i18][c11];
            int g12 = (((g(iArr2[(i14 >> 8) & 255], 24) ^ iArr2[i16 & 255]) ^ g(iArr2[(i19 >> 16) & 255], 16)) ^ g(iArr2[(i17 >> 24) & 255], 8)) ^ iArr[i18][i15];
            int g13 = (((g(iArr2[(i16 >> 8) & 255], 24) ^ iArr2[i17 & 255]) ^ g(iArr2[(i14 >> 16) & 255], 16)) ^ g(iArr2[(i19 >> 24) & 255], 8)) ^ iArr[i18][2];
            int g14 = ((iArr2[i19 & 255] ^ g(iArr2[(i17 >> 8) & 255], 24)) ^ g(iArr2[(i16 >> 16) & 255], 16)) ^ g(iArr2[(i14 >> 24) & 255], 8);
            int i21 = i18 - 1;
            int i22 = g14 ^ iArr[i18][3];
            int g15 = (((iArr2[g11 & 255] ^ g(iArr2[(i22 >> 8) & 255], 24)) ^ g(iArr2[(g13 >> 16) & 255], 16)) ^ g(iArr2[(g12 >> 24) & 255], 8)) ^ iArr[i21][0];
            int g16 = (((iArr2[g12 & 255] ^ g(iArr2[(g11 >> 8) & 255], 24)) ^ g(iArr2[(i22 >> 16) & 255], 16)) ^ g(iArr2[(g13 >> 24) & 255], 8)) ^ iArr[i21][1];
            int i23 = i21 - 1;
            i19 = (((iArr2[i22 & 255] ^ g(iArr2[(g13 >> 8) & 255], 24)) ^ g(iArr2[(g12 >> 16) & 255], 16)) ^ g(iArr2[(g11 >> 24) & 255], 8)) ^ iArr[i21][3];
            i14 = g15;
            i16 = g16;
            i17 = (((iArr2[g13 & 255] ^ g(iArr2[(g12 >> 8) & 255], 24)) ^ g(iArr2[(g11 >> 16) & 255], 16)) ^ g(iArr2[(i22 >> 24) & 255], 8)) ^ iArr[i21][2];
            c11 = 0;
            i15 = 1;
            i18 = i23;
        }
        int[] iArr3 = f36661i;
        int g17 = (((iArr3[i14 & 255] ^ g(iArr3[(i19 >> 8) & 255], 24)) ^ g(iArr3[(i17 >> 16) & 255], 16)) ^ g(iArr3[(i16 >> 24) & 255], 8)) ^ iArr[i18][0];
        int g18 = (((iArr3[i16 & 255] ^ g(iArr3[(i14 >> 8) & 255], 24)) ^ g(iArr3[(i19 >> 16) & 255], 16)) ^ g(iArr3[(i17 >> 24) & 255], 8)) ^ iArr[i18][1];
        int g19 = (((iArr3[i17 & 255] ^ g(iArr3[(i16 >> 8) & 255], 24)) ^ g(iArr3[(i14 >> 16) & 255], 16)) ^ g(iArr3[(i19 >> 24) & 255], 8)) ^ iArr[i18][2];
        int g21 = (((iArr3[i19 & 255] ^ g(iArr3[(i17 >> 8) & 255], 24)) ^ g(iArr3[(i16 >> 16) & 255], 16)) ^ g(iArr3[(i14 >> 24) & 255], 8)) ^ iArr[i18][3];
        byte[] bArr3 = f36658f;
        byte[] bArr4 = this.f36665d;
        int i24 = ((((bArr3[g17 & 255] & 255) ^ ((bArr4[(g21 >> 8) & 255] & 255) << 8)) ^ ((bArr4[(g19 >> 16) & 255] & 255) << 16)) ^ (bArr3[(g18 >> 24) & 255] << 24)) ^ iArr[0][0];
        int i25 = ((((bArr4[g18 & 255] & 255) ^ ((bArr4[(g17 >> 8) & 255] & 255) << 8)) ^ ((bArr3[(g21 >> 16) & 255] & 255) << 16)) ^ (bArr4[(g19 >> 24) & 255] << 24)) ^ iArr[0][1];
        int i26 = ((((bArr3[g21 & 255] & 255) ^ ((bArr4[(g19 >> 8) & 255] & 255) << 8)) ^ ((bArr4[(g18 >> 16) & 255] & 255) << 16)) ^ (bArr4[(g17 >> 24) & 255] << 24)) ^ iArr[0][3];
        r70.i.i(i24, bArr2, i12 + 0);
        r70.i.i(i25, bArr2, i12 + 4);
        r70.i.i(((((bArr4[g19 & 255] & 255) ^ ((bArr3[(g18 >> 8) & 255] & 255) << 8)) ^ ((bArr3[(g17 >> 16) & 255] & 255) << 16)) ^ (bArr4[(g21 >> 24) & 255] << 24)) ^ iArr[0][2], bArr2, i12 + 8);
        r70.i.i(i26, bArr2, i12 + 12);
    }

    private void d(byte[] bArr, int i11, byte[] bArr2, int i12, int[][] iArr) {
        int l11 = r70.i.l(bArr, i11 + 0);
        int l12 = r70.i.l(bArr, i11 + 4);
        int l13 = r70.i.l(bArr, i11 + 8);
        int l14 = r70.i.l(bArr, i11 + 12);
        char c11 = 0;
        int i13 = l11 ^ iArr[0][0];
        int i14 = 1;
        int i15 = l12 ^ iArr[0][1];
        int i16 = l13 ^ iArr[0][2];
        int i17 = l14 ^ iArr[0][3];
        int i18 = 1;
        while (i18 < this.f36662a - i14) {
            int[] iArr2 = f36660h;
            int g11 = (((g(iArr2[(i15 >> 8) & 255], 24) ^ iArr2[i13 & 255]) ^ g(iArr2[(i16 >> 16) & 255], 16)) ^ g(iArr2[(i17 >> 24) & 255], 8)) ^ iArr[i18][c11];
            int g12 = (((g(iArr2[(i16 >> 8) & 255], 24) ^ iArr2[i15 & 255]) ^ g(iArr2[(i17 >> 16) & 255], 16)) ^ g(iArr2[(i13 >> 24) & 255], 8)) ^ iArr[i18][i14];
            int g13 = (((g(iArr2[(i17 >> 8) & 255], 24) ^ iArr2[i16 & 255]) ^ g(iArr2[(i13 >> 16) & 255], 16)) ^ g(iArr2[(i15 >> 24) & 255], 8)) ^ iArr[i18][2];
            int g14 = ((iArr2[i17 & 255] ^ g(iArr2[(i13 >> 8) & 255], 24)) ^ g(iArr2[(i15 >> 16) & 255], 16)) ^ g(iArr2[(i16 >> 24) & 255], 8);
            int i19 = i18 + 1;
            int i21 = g14 ^ iArr[i18][3];
            int g15 = (((iArr2[g11 & 255] ^ g(iArr2[(g12 >> 8) & 255], 24)) ^ g(iArr2[(g13 >> 16) & 255], 16)) ^ g(iArr2[(i21 >> 24) & 255], 8)) ^ iArr[i19][0];
            int g16 = (((iArr2[g12 & 255] ^ g(iArr2[(g13 >> 8) & 255], 24)) ^ g(iArr2[(i21 >> 16) & 255], 16)) ^ g(iArr2[(g11 >> 24) & 255], 8)) ^ iArr[i19][1];
            int g17 = ((iArr2[i21 & 255] ^ g(iArr2[(g11 >> 8) & 255], 24)) ^ g(iArr2[(g12 >> 16) & 255], 16)) ^ g(iArr2[(g13 >> 24) & 255], 8);
            int i22 = i19 + 1;
            i17 = g17 ^ iArr[i19][3];
            i13 = g15;
            i15 = g16;
            i16 = (((iArr2[g13 & 255] ^ g(iArr2[(i21 >> 8) & 255], 24)) ^ g(iArr2[(g11 >> 16) & 255], 16)) ^ g(iArr2[(g12 >> 24) & 255], 8)) ^ iArr[i19][2];
            i14 = 1;
            i18 = i22;
            c11 = 0;
        }
        int[] iArr3 = f36660h;
        int g18 = (((iArr3[i13 & 255] ^ g(iArr3[(i15 >> 8) & 255], 24)) ^ g(iArr3[(i16 >> 16) & 255], 16)) ^ g(iArr3[(i17 >> 24) & 255], 8)) ^ iArr[i18][0];
        int g19 = (((iArr3[i15 & 255] ^ g(iArr3[(i16 >> 8) & 255], 24)) ^ g(iArr3[(i17 >> 16) & 255], 16)) ^ g(iArr3[(i13 >> 24) & 255], 8)) ^ iArr[i18][1];
        int g21 = (((iArr3[i16 & 255] ^ g(iArr3[(i17 >> 8) & 255], 24)) ^ g(iArr3[(i13 >> 16) & 255], 16)) ^ g(iArr3[(i15 >> 24) & 255], 8)) ^ iArr[i18][2];
        int g22 = ((iArr3[i17 & 255] ^ g(iArr3[(i13 >> 8) & 255], 24)) ^ g(iArr3[(i15 >> 16) & 255], 16)) ^ g(iArr3[(i16 >> 24) & 255], 8);
        int i23 = i18 + 1;
        int i24 = g22 ^ iArr[i18][3];
        byte[] bArr3 = f36657e;
        int i25 = (bArr3[g18 & 255] & 255) ^ ((bArr3[(g19 >> 8) & 255] & 255) << 8);
        byte[] bArr4 = this.f36665d;
        int i26 = ((i25 ^ ((bArr4[(g21 >> 16) & 255] & 255) << 16)) ^ (bArr4[(i24 >> 24) & 255] << 24)) ^ iArr[i23][0];
        int i27 = ((((bArr4[g19 & 255] & 255) ^ ((bArr3[(g21 >> 8) & 255] & 255) << 8)) ^ ((bArr3[(i24 >> 16) & 255] & 255) << 16)) ^ (bArr4[(g18 >> 24) & 255] << 24)) ^ iArr[i23][1];
        int i28 = (bArr3[(i24 >> 8) & 255] & 255) << 8;
        int i29 = ((((bArr4[i24 & 255] & 255) ^ ((bArr4[(g18 >> 8) & 255] & 255) << 8)) ^ ((bArr4[(g19 >> 16) & 255] & 255) << 16)) ^ (bArr3[(g21 >> 24) & 255] << 24)) ^ iArr[i23][3];
        r70.i.i(i26, bArr2, i12 + 0);
        r70.i.i(i27, bArr2, i12 + 4);
        r70.i.i((((i28 ^ (bArr4[g21 & 255] & 255)) ^ ((bArr3[(g18 >> 16) & 255] & 255) << 16)) ^ (bArr3[(g19 >> 24) & 255] << 24)) ^ iArr[i23][2], bArr2, i12 + 8);
        r70.i.i(i29, bArr2, i12 + 12);
    }

    private int[][] e(byte[] bArr, boolean z11) {
        int length = bArr.length;
        if (length < 16 || length > 32 || (length & 7) != 0) {
            throw new IllegalArgumentException("Key length not 128/192/256 bits.");
        }
        int i11 = length >>> 2;
        int i12 = i11 + 6;
        this.f36662a = i12;
        int[][] iArr = (int[][]) Array.newInstance(int.class, i12 + 1, 4);
        int i13 = 8;
        char c11 = 3;
        if (i11 == 4) {
            int l11 = r70.i.l(bArr, 0);
            iArr[0][0] = l11;
            int l12 = r70.i.l(bArr, 4);
            iArr[0][1] = l12;
            int l13 = r70.i.l(bArr, 8);
            iArr[0][2] = l13;
            int l14 = r70.i.l(bArr, 12);
            iArr[0][3] = l14;
            for (int i14 = 1; i14 <= 10; i14++) {
                l11 ^= h(g(l14, 8)) ^ f36659g[i14 - 1];
                iArr[i14][0] = l11;
                l12 ^= l11;
                iArr[i14][1] = l12;
                l13 ^= l12;
                iArr[i14][2] = l13;
                l14 ^= l13;
                iArr[i14][3] = l14;
            }
        } else if (i11 == 6) {
            int l15 = r70.i.l(bArr, 0);
            iArr[0][0] = l15;
            int l16 = r70.i.l(bArr, 4);
            iArr[0][1] = l16;
            int l17 = r70.i.l(bArr, 8);
            iArr[0][2] = l17;
            int l18 = r70.i.l(bArr, 12);
            iArr[0][3] = l18;
            int l19 = r70.i.l(bArr, 16);
            int l21 = r70.i.l(bArr, 20);
            int i15 = 1;
            int i16 = 1;
            while (true) {
                iArr[i15][0] = l19;
                iArr[i15][1] = l21;
                int h11 = h(g(l21, 8)) ^ i16;
                int i17 = i16 << 1;
                int i18 = l15 ^ h11;
                iArr[i15][2] = i18;
                int i19 = l16 ^ i18;
                iArr[i15][3] = i19;
                int i21 = l17 ^ i19;
                int i22 = i15 + 1;
                iArr[i22][0] = i21;
                int i23 = l18 ^ i21;
                iArr[i22][1] = i23;
                int i24 = l19 ^ i23;
                iArr[i22][2] = i24;
                int i25 = l21 ^ i24;
                iArr[i22][3] = i25;
                int h12 = h(g(i25, 8)) ^ i17;
                i16 = i17 << 1;
                l15 = i18 ^ h12;
                int i26 = i15 + 2;
                iArr[i26][0] = l15;
                l16 = i19 ^ l15;
                iArr[i26][1] = l16;
                l17 = i21 ^ l16;
                iArr[i26][2] = l17;
                l18 = i23 ^ l17;
                iArr[i26][3] = l18;
                i15 += 3;
                if (i15 >= 13) {
                    break;
                }
                l19 = i24 ^ l18;
                l21 = i25 ^ l19;
            }
        } else if (i11 != 8) {
            throw new IllegalStateException("Should never get here");
        } else {
            int l22 = r70.i.l(bArr, 0);
            iArr[0][0] = l22;
            int l23 = r70.i.l(bArr, 4);
            iArr[0][1] = l23;
            int l24 = r70.i.l(bArr, 8);
            iArr[0][2] = l24;
            int l25 = r70.i.l(bArr, 12);
            iArr[0][3] = l25;
            int l26 = r70.i.l(bArr, 16);
            iArr[1][0] = l26;
            int l27 = r70.i.l(bArr, 20);
            iArr[1][1] = l27;
            int l28 = r70.i.l(bArr, 24);
            iArr[1][2] = l28;
            int l29 = r70.i.l(bArr, 28);
            iArr[1][3] = l29;
            int i27 = 2;
            int i28 = 1;
            while (true) {
                int h13 = h(g(l29, i13)) ^ i28;
                i28 <<= 1;
                l22 ^= h13;
                iArr[i27][0] = l22;
                l23 ^= l22;
                iArr[i27][1] = l23;
                l24 ^= l23;
                iArr[i27][2] = l24;
                l25 ^= l24;
                iArr[i27][c11] = l25;
                int i29 = i27 + 1;
                if (i29 >= 15) {
                    break;
                }
                l26 ^= h(l25);
                iArr[i29][0] = l26;
                l27 ^= l26;
                iArr[i29][1] = l27;
                l28 ^= l27;
                iArr[i29][2] = l28;
                l29 ^= l28;
                iArr[i29][3] = l29;
                i27 = i29 + 1;
                i13 = 8;
                c11 = 3;
            }
        }
        if (!z11) {
            for (int i31 = 1; i31 < this.f36662a; i31++) {
                for (int i32 = 0; i32 < 4; i32++) {
                    iArr[i31][i32] = f(iArr[i31][i32]);
                }
            }
        }
        return iArr;
    }

    private static int f(int i11) {
        int g11 = g(i11, 8) ^ i11;
        int a11 = i11 ^ a(g11);
        int b11 = g11 ^ b(a11);
        return a11 ^ (b11 ^ g(b11, 16));
    }

    private static int g(int i11, int i12) {
        return (i11 << (-i12)) | (i11 >>> i12);
    }

    private static int h(int i11) {
        byte[] bArr = f36657e;
        return (bArr[(i11 >> 24) & 255] << 24) | (bArr[i11 & 255] & 255) | ((bArr[(i11 >> 8) & 255] & 255) << 8) | ((bArr[(i11 >> 16) & 255] & 255) << 16);
    }

    @Override // org.bouncycastle.crypto.e
    public String getAlgorithmName() {
        return "AES";
    }

    @Override // org.bouncycastle.crypto.e
    public int getBlockSize() {
        return 16;
    }

    @Override // org.bouncycastle.crypto.e
    public void init(boolean z11, org.bouncycastle.crypto.i iVar) {
        if (!(iVar instanceof u50.b1)) {
            throw new IllegalArgumentException("invalid parameter passed to AES init - " + iVar.getClass().getName());
        }
        this.f36663b = e(((u50.b1) iVar).a(), z11);
        this.f36664c = z11;
        if (z11) {
            this.f36665d = org.bouncycastle.util.a.h(f36657e);
        } else {
            this.f36665d = org.bouncycastle.util.a.h(f36658f);
        }
    }

    @Override // org.bouncycastle.crypto.e
    public int processBlock(byte[] bArr, int i11, byte[] bArr2, int i12) {
        int[][] iArr = this.f36663b;
        if (iArr != null) {
            if (i11 <= bArr.length - 16) {
                if (i12 <= bArr2.length - 16) {
                    if (this.f36664c) {
                        d(bArr, i11, bArr2, i12, iArr);
                    } else {
                        c(bArr, i11, bArr2, i12, iArr);
                    }
                    return 16;
                }
                throw new OutputLengthException("output buffer too short");
            }
            throw new DataLengthException("input buffer too short");
        }
        throw new IllegalStateException("AES engine not initialised");
    }

    @Override // org.bouncycastle.crypto.e
    public void reset() {
    }
}